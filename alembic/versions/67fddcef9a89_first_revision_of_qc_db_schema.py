"""First revision of QC DB schema

Revision ID: 67fddcef9a89
Revises: 
Create Date: 2022-07-21 12:52:34.723050

"""
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision = "67fddcef9a89"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "qc_state_dict",
        sa.Column("id_qc_state_dict", mysql.INTEGER(), nullable=False),
        sa.Column("state", sa.String(length=255), nullable=False),
        sa.Column("outcome", mysql.TINYINT(), nullable=True),
        sa.PrimaryKeyConstraint("id_qc_state_dict"),
        sa.UniqueConstraint("state"),
    )
    op.create_table(
        "qc_type",
        sa.Column("id_qc_type", mysql.INTEGER(), nullable=False),
        sa.Column("qc_type", sa.String(length=10), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id_qc_type"),
        sa.UniqueConstraint("qc_type"),
    )
    op.create_table(
        "seq_platform",
        sa.Column("id_seq_platform", mysql.INTEGER(), nullable=False),
        sa.Column("name", sa.String(length=10), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.Column(
            "iscurrent",
            mysql.TINYINT(display_width=1),
            server_default=sa.text("'1'"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id_seq_platform"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "sub_product_attr",
        sa.Column("id_attr", mysql.INTEGER(), nullable=False),
        sa.Column("attr_name", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id_attr"),
        sa.UniqueConstraint("attr_name"),
    )
    op.create_table(
        "user",
        sa.Column("id_user", mysql.INTEGER(), nullable=False),
        sa.Column("username", sa.String(length=12), nullable=False),
        sa.Column(
            "iscurrent",
            mysql.TINYINT(display_width=1),
            server_default=sa.text("'1'"),
            nullable=False,
        ),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Datetime the user record was created",
        ),
        sa.Column(
            "date_updated",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Datetime the user record was created or changed",
        ),
        sa.PrimaryKeyConstraint("id_user"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "annotation",
        sa.Column("id_annotation", mysql.BIGINT(), nullable=False),
        sa.Column("id_user", mysql.INTEGER(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Datetime this record was created",
        ),
        sa.Column(
            "qc_specific",
            mysql.TINYINT(display_width=1),
            server_default=sa.text("'0'"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["id_user"], ["user.id_user"], name="fk_annotation_user"
        ),
        sa.PrimaryKeyConstraint("id_annotation"),
    )
    op.create_index(
        op.f("ix_annotation_id_user"), "annotation", ["id_user"], unique=False
    )
    op.create_table(
        "seq_product",
        sa.Column("id_seq_product", mysql.BIGINT(), nullable=False),
        sa.Column("id_product", sa.CHAR(length=64), nullable=False),
        sa.Column("id_seq_platform", mysql.INTEGER(), nullable=False),
        sa.Column(
            "has_seq_data",
            mysql.TINYINT(display_width=1),
            server_default=sa.text("'1'"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["id_seq_platform"],
            ["seq_platform.id_seq_platform"],
            name="fk_subproduct_seq_pl",
        ),
        sa.PrimaryKeyConstraint("id_seq_product"),
        sa.UniqueConstraint("id_product"),
    )
    op.create_index(
        op.f("ix_seq_product_id_seq_platform"),
        "seq_product",
        ["id_seq_platform"],
        unique=False,
    )
    op.create_table(
        "sub_product",
        sa.Column("id_sub_product", mysql.BIGINT(), nullable=False),
        sa.Column("id_attr_one", mysql.INTEGER(), nullable=False),
        sa.Column("value_attr_one", sa.String(length=20), nullable=False),
        sa.Column("id_attr_two", mysql.INTEGER(), nullable=False),
        sa.Column("value_attr_two", sa.String(length=20), nullable=False),
        sa.Column("properties", sa.JSON(), nullable=False),
        sa.Column("properties_digest", sa.CHAR(length=64), nullable=False),
        sa.Column("tags", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_attr_one"], ["sub_product_attr.id_attr"], name="fk_subproduct_attr1"
        ),
        sa.ForeignKeyConstraint(
            ["id_attr_two"], ["sub_product_attr.id_attr"], name="fk_subproduct_attr2"
        ),
        sa.PrimaryKeyConstraint("id_sub_product"),
        sa.UniqueConstraint("properties_digest"),
    )
    op.create_index(
        op.f("ix_sub_product_id_attr_one"), "sub_product", ["id_attr_one"], unique=False
    )
    op.create_index(
        op.f("ix_sub_product_id_attr_two"), "sub_product", ["id_attr_two"], unique=False
    )
    op.create_index(op.f("ix_sub_product_tags"), "sub_product", ["tags"], unique=False)
    op.create_index(
        op.f("ix_sub_product_value_attr_one"),
        "sub_product",
        ["value_attr_one"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sub_product_value_attr_two"),
        "sub_product",
        ["value_attr_two"],
        unique=False,
    )
    op.create_table(
        "product_annotation",
        sa.Column("id_product_annotation", mysql.BIGINT(), nullable=False),
        sa.Column("id_annotation", mysql.BIGINT(), nullable=False),
        sa.Column("id_seq_product", mysql.BIGINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_annotation"],
            ["annotation.id_annotation"],
            name="fk_pr_annotation_annotation",
        ),
        sa.ForeignKeyConstraint(
            ["id_seq_product"],
            ["seq_product.id_seq_product"],
            name="fk_pr_annotation_product",
        ),
        sa.PrimaryKeyConstraint("id_product_annotation"),
    )
    op.create_index(
        op.f("ix_product_annotation_id_annotation"),
        "product_annotation",
        ["id_annotation"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_annotation_id_seq_product"),
        "product_annotation",
        ["id_seq_product"],
        unique=False,
    )
    op.create_table(
        "product_layout",
        sa.Column("id_product_layout", mysql.BIGINT(), nullable=False),
        sa.Column("id_seq_product", mysql.BIGINT(), nullable=False),
        sa.Column("id_sub_product", mysql.BIGINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_seq_product"],
            ["seq_product.id_seq_product"],
            name="fk_product_layout_seqpr",
        ),
        sa.ForeignKeyConstraint(
            ["id_sub_product"],
            ["sub_product.id_sub_product"],
            name="fk_product_layout_subpr",
        ),
        sa.PrimaryKeyConstraint("id_product_layout"),
    )
    op.create_index(
        op.f("ix_product_layout_id_sub_product"),
        "product_layout",
        ["id_sub_product"],
        unique=False,
    )
    op.create_index(
        "unique_product_layout",
        "product_layout",
        ["id_seq_product", "id_sub_product"],
        unique=True,
    )
    op.create_table(
        "qc_state",
        sa.Column("id_qc_state", mysql.BIGINT(), nullable=False),
        sa.Column("id_seq_product", mysql.BIGINT(), nullable=False),
        sa.Column("id_user", mysql.INTEGER(), nullable=False),
        sa.Column("id_qc_state_dict", mysql.INTEGER(), nullable=False),
        sa.Column("id_qc_type", mysql.INTEGER(), nullable=False),
        sa.Column("created_by", sa.String(length=20), nullable=False),
        sa.Column(
            "is_preliminary",
            mysql.TINYINT(display_width=1),
            server_default=sa.text("'1'"),
            nullable=True,
        ),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Datetime this record was created",
        ),
        sa.Column(
            "date_updated",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Datetime this record was created or changed",
        ),
        sa.ForeignKeyConstraint(
            ["id_qc_state_dict"],
            ["qc_state_dict.id_qc_state_dict"],
            name="fk_qc_state_state",
        ),
        sa.ForeignKeyConstraint(
            ["id_qc_type"], ["qc_type.id_qc_type"], name="fk_qc_type"
        ),
        sa.ForeignKeyConstraint(
            ["id_seq_product"],
            ["seq_product.id_seq_product"],
            name="fk_qc_state_product",
        ),
        sa.ForeignKeyConstraint(["id_user"], ["user.id_user"], name="fk_qc_state_user"),
        sa.PrimaryKeyConstraint("id_qc_state"),
    )
    op.create_index(
        op.f("ix_qc_state_id_qc_state_dict"),
        "qc_state",
        ["id_qc_state_dict"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qc_state_id_qc_type"), "qc_state", ["id_qc_type"], unique=False
    )
    op.create_index(op.f("ix_qc_state_id_user"), "qc_state", ["id_user"], unique=False)
    op.create_index(
        "unique_qc_state", "qc_state", ["id_seq_product", "id_qc_type"], unique=True
    )
    op.create_table(
        "qc_state_hist",
        sa.Column("id_qc_state_hist", mysql.BIGINT(), nullable=False),
        sa.Column("id_seq_product", mysql.BIGINT(), nullable=False),
        sa.Column("id_user", mysql.INTEGER(), nullable=False),
        sa.Column("id_qc_state_dict", mysql.INTEGER(), nullable=False),
        sa.Column("id_qc_type", mysql.INTEGER(), nullable=False),
        sa.Column("created_by", sa.String(length=20), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            nullable=False,
            comment="Datetime the original record was created",
        ),
        sa.Column(
            "date_updated",
            sa.DateTime(),
            nullable=False,
            comment="Datetime the original record was created or changed",
        ),
        sa.Column(
            "is_preliminary",
            mysql.TINYINT(display_width=1),
            server_default=sa.text("'1'"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["id_qc_state_dict"],
            ["qc_state_dict.id_qc_state_dict"],
            name="fk_qc_stateh_state",
        ),
        sa.ForeignKeyConstraint(
            ["id_qc_type"], ["qc_type.id_qc_type"], name="fk_qc_stateh_type"
        ),
        sa.ForeignKeyConstraint(
            ["id_seq_product"],
            ["seq_product.id_seq_product"],
            name="fk_qc_stateh_product",
        ),
        sa.ForeignKeyConstraint(
            ["id_user"], ["user.id_user"], name="fk_qc_stateh_user"
        ),
        sa.PrimaryKeyConstraint("id_qc_state_hist"),
    )
    op.create_index(
        op.f("ix_qc_state_hist_id_qc_state_dict"),
        "qc_state_hist",
        ["id_qc_state_dict"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qc_state_hist_id_qc_type"),
        "qc_state_hist",
        ["id_qc_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qc_state_hist_id_seq_product"),
        "qc_state_hist",
        ["id_seq_product"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qc_state_hist_id_user"), "qc_state_hist", ["id_user"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_qc_state_hist_id_user"), table_name="qc_state_hist")
    op.drop_index(op.f("ix_qc_state_hist_id_seq_product"), table_name="qc_state_hist")
    op.drop_index(op.f("ix_qc_state_hist_id_qc_type"), table_name="qc_state_hist")
    op.drop_index(op.f("ix_qc_state_hist_id_qc_state_dict"), table_name="qc_state_hist")
    op.drop_table("qc_state_hist")
    op.drop_index("unique_qc_state", table_name="qc_state")
    op.drop_index(op.f("ix_qc_state_id_user"), table_name="qc_state")
    op.drop_index(op.f("ix_qc_state_id_qc_type"), table_name="qc_state")
    op.drop_index(op.f("ix_qc_state_id_qc_state_dict"), table_name="qc_state")
    op.drop_table("qc_state")
    op.drop_index("unique_product_layout", table_name="product_layout")
    op.drop_index(op.f("ix_product_layout_id_sub_product"), table_name="product_layout")
    op.drop_table("product_layout")
    op.drop_index(
        op.f("ix_product_annotation_id_seq_product"), table_name="product_annotation"
    )
    op.drop_index(
        op.f("ix_product_annotation_id_annotation"), table_name="product_annotation"
    )
    op.drop_table("product_annotation")
    op.drop_index(op.f("ix_sub_product_value_attr_two"), table_name="sub_product")
    op.drop_index(op.f("ix_sub_product_value_attr_one"), table_name="sub_product")
    op.drop_index(op.f("ix_sub_product_tags"), table_name="sub_product")
    op.drop_index(op.f("ix_sub_product_id_attr_two"), table_name="sub_product")
    op.drop_index(op.f("ix_sub_product_id_attr_one"), table_name="sub_product")
    op.drop_table("sub_product")
    op.drop_index(op.f("ix_seq_product_id_seq_platform"), table_name="seq_product")
    op.drop_table("seq_product")
    op.drop_index(op.f("ix_annotation_id_user"), table_name="annotation")
    op.drop_table("annotation")
    op.drop_table("user")
    op.drop_table("sub_product_attr")
    op.drop_table("seq_platform")
    op.drop_table("qc_type")
    op.drop_table("qc_state_dict")
    # ### end Alembic commands ###
