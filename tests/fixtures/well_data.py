from datetime import date, datetime, timedelta

import pytest
from npg_id_generation.pac_bio import PacBioEntity
from sqlalchemy import insert, select

from lang_qc.db.helper.well import WellQc
from lang_qc.db.mlwh_schema import PacBioRunWellMetrics
from lang_qc.db.qc_schema import QcStateDict, QcType, SeqPlatform, SubProductAttr, User

QC_TYPES = [
    {"qc_type": "sequencing", "description": "Sequencing process evaluation"},
    {"qc_type": "library", "description": "Sample/library evaluation"},
]

QC_STATES = [
    {"state": "Failed, Instrument", "outcome": 0},
    {"state": "Failed, SMRT cell", "outcome": 0},
    {"state": "Failed", "outcome": 0},
    {"state": "Aborted", "outcome": 0},
    {"state": "Undecided", "outcome": None},
    {"state": "Passed", "outcome": 1},
    {"state": "Claimed", "outcome": None},
    {"state": "On hold", "outcome": None},
]

PLATFORMS = [
    {"name": "PacBio", "description": "Pacific Biosciences"},
    {"name": "ONT", "description": "Oxford Nanopore Technologies"},
    {"name": "Illumina", "description": "Illumina"},
]

ATTRIBUTE_NAMES = [
    {
        "attr_name": "run_name",
        "description": "The name of the PacBio run according to LIMS",
    },
    {"attr_name": "well_label", "description": "PacBio well (or cell) label"},
    {
        "attr_name": "flowcell_id",
        "description": "ONT flowcell id as recorded by the instrument",
    },
    {"attr_name": "run_id", "description": "Run id as generated by the ONT instrument"},
    {"attr_name": "id_run", "description": "Run id in the NPG run tracking system"},
    {"attr_name": "position", "description": "Illumina flowcell position (lane)"},
]

USERS = [
    {"username": "zx80@example.com"},
    {"username": "cd32@example.com"},
]

# A combination of all QC states and final/not final.
# Data in each list: run name, well label, qc state description, is_preliminary flag, date
QC_DATA = [
    ["TRACTION_RUN_1", "A1", "Claimed", True, "2022-12-07 07:15:19"],
    ["TRACTION_RUN_1", "B1", "On hold", True, "2022-12-08 07:15:19"],
    ["TRACTION_RUN_1", "C1", "Claimed", True, "2022-12-08 08:15:19"],
    ["TRACTION_RUN_1", "D1", "On hold", True, "2022-12-08 09:15:19"],
    ["TRACTION_RUN_1", "E1", "Claimed", True, "2022-12-07 09:15:19"],
    ["TRACTION_RUN_2", "A1", "Failed, Instrument", True, "2022-12-07 15:13:56"],
    ["TRACTION_RUN_2", "B1", "Failed, Instrument", False, "2022-12-08 15:18:56"],
    ["TRACTION_RUN_2", "C1", "Failed, SMRT cell", True, "2022-12-08 18:14:56"],
    ["TRACTION_RUN_2", "D1", "Failed, SMRT cell", False, "2022-12-07 15:23:56"],
    ["TRACTION_RUN_4", "A1", "Failed", True, "2022-12-12 16:02:57"],
    ["TRACTION_RUN_4", "B1", "Failed", False, "2022-12-12 12:02:57"],
    ["TRACTION_RUN_5", "A1", "Passed", True, "2022-12-22 16:21:06"],
    ["TRACTION_RUN_5", "B1", "Passed", False, "2022-12-21 14:21:06"],
    ["TRACTION_RUN_6", "A1", "Aborted", True, "2022-12-15 11:42:33"],
    ["TRACTION_RUN_6", "B1", "Aborted", True, "2022-12-15 10:42:33"],
    ["TRACTION_RUN_7", "A1", "Failed", True, "2022-02-15 10:42:33"],
]

# A set of fake warehouse entries for the QC states above.
# Data in each list: run name, well label, run start, completed and
# well start, completed dates, well status, run status, ccs_execution_mode,
# polymerase_num_reads, hifi_num_reads, instrument_name, instrument_type.
MLWH_DATA = [
    [
        "TRACTION_RUN_1",
        "A1",
        "2022-12-02 15:10:36",
        "2022-12-09 11:17:23",
        "2022-12-02 15:20:40",
        "2022-12-04 05:37:14",
        "Complete",
        "Complete",
        "None",
        5114903,
        None,
        "64016",
        "Sequel2",
        None,
    ],
    [
        "TRACTION_RUN_1",
        "B1",
        "2022-12-02 15:10:36",
        "2022-12-09 11:17:23",
        "2022-12-03 18:28:42",
        "2022-12-05 07:15:19",
        "Complete",
        "Complete",
        "None",
        4793726,
        None,
        "64016",
        "Sequel2",
        None,
    ],
    [
        "TRACTION_RUN_1",
        "C1",
        "2022-12-02 15:10:36",
        "2022-12-09 11:17:23",
        "2022-12-02 15:20:40",
        "2022-12-04 05:37:14",
        "Complete",
        "Complete",
        "None",
        4291550,
        None,
        "64016",
        "Sequel2",
        None,
    ],
    [
        "TRACTION_RUN_1",
        "D1",
        "2022-12-02 15:10:36",
        "2022-12-09 11:17:23",
        "2022-12-03 18:28:42",
        "2022-12-05 07:15:19",
        "Complete",
        "Complete",
        "None",
        5198365,
        None,
        "1234",
        "Sequel2",
        None,
    ],
    [
        "TRACTION_RUN_2",
        "A1",
        "2022-12-02 15:11:22",
        "2022-12-09 11:26:27",
        "2022-12-02 15:21:20",
        "2022-12-04 06:43:31",
        "Complete",
        "Complete",
        "OffInstrument",
        3672108,
        1081530,
        "12345",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_2",
        "B1",
        "2022-12-02 15:11:22",
        "2022-12-09 11:26:27",
        "2022-12-03 18:41:10",
        "2022-12-05 03:14:01",
        "Complete",
        "Complete",
        "OffInstrument",
        6312393,
        2109215,
        "12345",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_2",
        "C1",
        "2022-12-02 15:11:22",
        "2022-12-09 11:26:27",
        "2022-12-04 21:52:27",
        "2022-12-06 11:08:40",
        "Complete",
        "Complete",
        "OffInstrument",
        6342393,
        2106715,
        "12345",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_2",
        "D1",
        "2022-12-02 15:11:22",
        "2022-12-09 11:26:27",
        "2022-12-06 01:20:31",
        "2022-12-07 14:13:56",
        "Complete",
        "Complete",
        "OffInstrument",
        6342593,
        2160715,
        "12345",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_3",
        "A1",
        "2022-12-06 10:59:10",
        "2022-12-13 17:16:03",
        "2022-12-10 01:56:23",
        "2022-12-11 20:23:56",
        "Complete",
        "Complete",
        "None",
        1391057,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_3",
        "B1",
        "2022-12-06 10:59:10",
        "2022-12-13 17:16:03",
        "2022-12-11 06:53:00",
        "2022-12-12 19:48:11",
        "Complete",
        "Complete",
        "None",
        4519510,
        None,
        "12345",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_4",
        "A1",
        "2022-12-06 10:58:52",
        "2022-12-13 10:50:35",
        "2022-12-06 11:08:59",
        "2022-12-08 00:03:14",
        "Complete",
        "Complete",
        "None",
        5114900,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_4",
        "B1",
        "2022-12-06 10:58:52",
        "2022-12-13 10:50:35",
        "2022-12-07 14:21:21",
        "2022-12-09 01:43:36",
        "Complete",
        "Complete",
        "None",
        5114503,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_4",
        "C1",
        "2022-12-06 10:58:52",
        "2022-12-13 10:50:35",
        "2022-12-08 17:38:38",
        "2022-12-10 07:44:48",
        "Complete",
        "Complete",
        "None",
        5124903,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_4",
        "D1",
        "2022-12-06 10:58:52",
        "2022-12-13 10:50:35",
        "2022-12-09 22:36:07",
        "2022-12-11 16:02:57",
        "Complete",
        "Aborting",
        "None",
        4114903,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_5",
        "A1",
        "2022-12-14 11:56:33",
        "2022-12-21 09:20:16",
        "2022-12-19 01:54:11",
        "2022-12-20 14:21:06",
        "Complete",
        "Complete",
        "OnInstrument",
        3999482,
        2049919,
        "64016E",
        "Sequel2e",
        None,
    ],
    [
        "TRACTION_RUN_5",
        "B1",
        "2022-12-14 11:56:33",
        "2022-12-21 09:20:16",
        "2022-12-14 12:06:49",
        "2022-12-15 23:35:44",
        "Complete",
        "Complete",
        "OnInstrument",
        3989482,
        2069919,
        "64016E",
        "Sequel2e",
        None,
    ],
    [
        "TRACTION_RUN_6",
        "A1",
        "2022-12-12 15:47:25",
        "2022-12-19 16:43:31",
        "2022-12-12 15:57:31",
        "2022-12-14 06:42:33",
        "Complete",
        "Running",
        "OnInstrument",
        3989782,
        2669919,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_6",
        "B1",
        "2022-12-12 15:47:25",
        "2022-12-19 16:43:31",
        "2022-12-13 20:52:47",
        "2022-12-15 10:37:35",
        "Complete",
        "Running",
        "OnInstrument",
        3989786,
        2769919,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_7",
        "A1",
        "2022-12-21 11:08:51",
        None,
        None,
        None,
        "Aborted",
        "Aborted",
        "OnInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_8",
        "A1",
        "2022-12-14 16:07:57",
        None,
        "2022-12-19 08:49:49",
        "2022-12-20 21:24:13",
        "Running",
        "Running",
        "OnInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_8",
        "B1",
        "2022-12-14 16:07:57",
        None,
        "2022-12-20 13:46:24",
        None,
        "Running",
        "Running",
        "OnInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_9",
        "A1",
        "2022-12-06 12:46:19",
        "2022-12-08 23:10:18",
        None,
        None,
        "Terminated",
        "Terminated",
        "OffInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_10",
        "A1",
        "2022-12-09 11:15:41",
        "2022-12-14 07:39:59",
        "2022-12-09 11:25:41",
        "2022-12-10 23:20:18",
        "Complete",
        "Aborted",
        "OnInstrument",
        3959786,
        2779919,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_10",
        "B1",
        "2022-12-09 11:15:41",
        "2022-12-14 07:39:59",
        "2022-12-10 16:20:18",
        "2022-12-12 05:00:40",
        "Complete",
        "Aborted",
        "OnInstrument",
        3989716,
        2761919,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_10",
        "C1",
        "2022-12-09 11:15:41",
        "2022-12-14 07:39:59",
        "2022-12-11 21:16:37",
        "2022-12-13 10:22:52",
        "Complete",
        "Aborted",
        "OnInstrument",
        3969786,
        2763919,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_11",
        "A1",
        "2022-12-10 11:15:41",
        "2022-12-15 07:39:59",
        "2022-12-12 21:16:37",
        "2022-12-14 10:22:52",
        "Complete",
        "Terminated",
        "OnInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_12",
        "A1",
        "2022-12-11 11:15:41",
        "2022-12-16 07:39:59",
        "2022-12-13 21:16:37",
        "2022-12-15 10:22:52",
        "Complete",
        "None",
        "OffInstrument",
        3339714,
        2226107,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_12",
        "B1",
        "2022-12-11 11:15:41",
        "2022-12-16 07:39:59",
        "2022-12-13 21:16:37",
        "2022-12-15 10:22:52",
        "Complete",
        "None",
        "OffInstrument",
        3336714,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_12",
        "C1",
        "2022-12-11 11:15:41",
        "2022-12-16 07:39:59",
        "2022-12-13 21:16:37",
        "2022-12-15 10:22:52",
        "Complete",
        "Complete",
        "OffInstrument",
        None,
        3339724,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_13",
        "A1",
        "2022-11-11 11:15:41",
        "2022-11-16 07:39:59",
        "2022-11-13 21:16:37",
        "2022-11-15 10:22:52",
        "Complete",
        "Complete",
        "OffInstrument",
        3989714,
        2227107,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_14",
        "A1",
        "2022-06-11 11:15:41",
        "2022-06-16 07:39:59",
        "2022-06-13 21:16:37",
        "2022-06-15 10:22:52",
        "Complete",
        "Unknown",
        "OffInstrument",
        None,
        3339724,
        "64016",
        "Sequel2",
        None,
    ],
    [
        "TRACTION_RUN_14",
        "B1",
        "2022-06-11 11:15:41",
        "2022-06-16 07:39:59",
        "2022-06-13 21:16:37",
        "2022-06-15 10:22:52",
        "Unknown",
        "Unknown",
        "OffInstrument",
        3989714,
        2227107,
        "1234",
        "Revio",
        1,
    ],
    [
        "SUBTRACTION_RUN_15",
        "A1",
        None,
        None,
        None,
        None,
        "Unknown",
        "Aborted",
        "OffInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_15",
        "A1",
        "2022-06-11 11:15:41",
        "2022-06-16 07:39:59",
        "2022-06-13 21:16:37",
        None,
        "Aborting",
        "Aborted",
        "OffInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_15",
        "B1",
        "2022-06-11 11:15:41",
        "2022-06-16 07:39:59",
        None,
        None,
        "Terminating",
        "Aborted",
        "OffInstrument",
        3989714,
        2227107,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_15",
        "C1",
        "2022-06-11 11:15:41",
        "2022-06-16 07:39:59",
        None,
        None,
        "Failed",
        "Aborted",
        "OffInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
    [
        "TRACTION_RUN_15",
        "D1",
        "2022-06-11 11:15:41",
        "2022-06-16 07:39:59",
        None,
        None,
        "Error",
        "Aborted",
        "OffInstrument",
        None,
        None,
        "1234",
        "Revio",
        1,
    ],
]

DATE_FORMAT = "%Y-%m-%d %H:%M:%S"


@pytest.fixture(scope="module")
def load_dicts_and_users(qcdb_test_session):

    qcdb_test_session.execute(insert(QcType), QC_TYPES)
    qcdb_test_session.execute(insert(QcStateDict), QC_STATES)
    qcdb_test_session.execute(insert(SeqPlatform), PLATFORMS)
    qcdb_test_session.execute(insert(SubProductAttr), ATTRIBUTE_NAMES)
    qcdb_test_session.execute(insert(User), USERS)

    qcdb_test_session.commit()


@pytest.fixture(scope="module")
def load_data4well_retrieval(
    load_dicts_and_users, qcdb_test_session, mlwhdb_test_session
):

    users = qcdb_test_session.execute(select(User)).scalars().all()

    # Each record will be committed individually
    for qc_data in QC_DATA:
        helper = WellQc(
            session=qcdb_test_session, run_name=qc_data[0], well_label=qc_data[1]
        )
        # Create data for both QC types.
        for qc_type_definition in QC_TYPES:
            qc_type = qc_type_definition["qc_type"]
            helper.assign_qc_state(
                user=users[0],
                qc_state=qc_data[2],
                is_preliminary=qc_data[3],
                date_updated=datetime.strptime(qc_data[4], DATE_FORMAT),
                qc_type=qc_type,
            )

    # We want some wells to be in the inbox. For that their run_complete dates
    # should be within last four weeks. Therefore, we need to update the timestamps
    # for these runs.
    _update_timestamps4inbox()

    # Transform a list of lists into a list of hashes, which map to db rows.
    mlwh_data4insert = []
    for record in MLWH_DATA:
        mlwh_data4insert.append(
            {
                "pac_bio_run_name": record[0],
                "well_label": record[1],
                "run_start": record[2],
                "run_complete": record[3],
                "well_start": record[4],
                "well_complete": record[5],
                "well_status": record[6],
                "run_status": record[7],
                "ccs_execution_mode": record[8],
                "polymerase_num_reads": record[9],
                "hifi_num_reads": record[10],
                "id_pac_bio_product": PacBioEntity(
                    run_name=record[0], well_label=record[1]
                ).hash_product_id(),
                "instrument_name": record[11],
                "instrument_type": record[12],
                "plate_number": record[13],
            }
        )
    mlwhdb_test_session.execute(insert(PacBioRunWellMetrics), mlwh_data4insert)
    mlwhdb_test_session.commit()

    return MLWH_DATA


def _update_timestamps4inbox():

    # Designated inbox wells:
    # TRACTION_RUN_3 - A1, B1,
    # TRACTION_RUN_4 - C1, D1,
    # TRACTION_RUN_10 - A1, B1, C1
    # TRACTION_RUN_12 - A1

    # These wells do not have a record in a fixture for the LangQC database,
    # values for their run status, ccs_execution_mode, polymerase_num_reads,
    # hifi_num_reads are set in a way that makes them eligible for the QC
    # inbox. Here we make sure that these wells have recent (ie within 4 weeks)
    # completion dates.
    # We also update dates for TRACTION_RUN_1, which does have wells in QC.

    # Find the earliest date in the set.
    inbox_runs = [f"TRACTION_RUN_{run}" for run in (1, 3, 4, 10, 12)]
    date_tuples = [
        (record[2], record[3], record[4], record[5])
        for record in MLWH_DATA
        if record[0] in inbox_runs
    ]
    dates = []
    for dt in date_tuples:
        dates.extend([datetime.strptime(date, DATE_FORMAT) for date in dt])
    old_earliest = min(dates)
    # Find the date 26 days from today.
    new_earliest = date.today() - timedelta(days=26)
    # Find the difference in days.
    delta = (
        datetime(new_earliest.year, new_earliest.month, new_earliest.day) - old_earliest
    )
    delta_plus = timedelta(delta.days)
    # Amend all dates for the inbox data by adding delta.
    for index, record in enumerate(MLWH_DATA):
        if record[0] in inbox_runs:
            for i in (2, 3, 4, 5):
                time = datetime.strptime(record[i], DATE_FORMAT) + delta_plus
                MLWH_DATA[index][i] = time.strftime(DATE_FORMAT)
